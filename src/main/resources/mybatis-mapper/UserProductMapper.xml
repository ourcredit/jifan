<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yrkj.mapper.UserProductMapper">

    <!--查询精选列表-->
    <select id="selectPerfectList" parameterType="SearchModel" resultType="PerfectDto">
        SELECT
            t.id ,
            t.name ,
            t.price ,
            t.image1 ,
            t.badge_introduce ,
            t.online_time
        FROM
            t_product t
        WHERE
            is_delete = 0
        AND is_perfect = 1
    </select>

    <!--查询商品列表-->
    <select id="selectProductList" parameterType="UserProductSearch" resultType="PerfectDto">
        SELECT
            tt.*
        FROM
            (
                SELECT
                    t.id ,
                    t. NAME ,
                    t.price ,
                    t.image1 ,
                    t.badge_introduce ,
                    t.online_time ,
                    (
                      SELECT SUM(x.number) from t_order_product x WHERE x.product_id = t.id
                    ) AS sales ,
                    t.badge_category1 ,
                    t.badge_category2 ,
                    t.badge_category3
                FROM
                    t_product t
                WHERE
                    is_delete = 0
                AND is_perfect = 1
            ) tt
        WHERE
            1 = 1
        <if test="category1!=0"> AND tt.badge_category1 = #{category1} </if>
        <if test="category2!=0"> AND tt.badge_category2 = #{category2} </if>
        <if test="category3!=0"> AND tt.badge_category3 = #{category3} </if>
        ORDER BY
        <if test="price_up==1"> tt.price ASC , </if>
        <if test="price_up==0"> tt.price DESC , </if>
        <if test="time_up==1"> tt.online_time ASC , </if>
        <if test="time_up==0"> tt.online_time DESC , </if>
        <if test="sales_up==1"> tt.sales ASC  </if>
        <if test="sales_up==0"> tt.sales DESC  </if>
    </select>


    <!--购物车逻辑-->
    <insert id="insertCart" parameterType="UserCart">
        INSERT INTO t_user_cart(
            open_id,
            product_id,
            number,
            create_time
        )VALUES (
            #{open_id},
            #{product_id},
            #{number},
            #{create_time}
        )
    </insert>

    <delete id="deleteCart" parameterType="CartDeleteInput">
        DELETE FROM t_user_cart WHERE open_id = #{open_id}
         AND product_id IN
        <foreach separator="," index="index" item="item" collection="list" close=")" open="(">
            #{item}
        </foreach>
    </delete>

    <select id="selectCartNum" parameterType="UserCart" resultType="java.lang.Integer">
        SELECT
              a.number
          FROM
              t_user_cart a
        WHERE
              a.product_id = #{product_id}
          AND a.open_id = #{open_id}
    </select>

    <update id="updateCartNum" parameterType="UserCart">
        UPDATE t_user_cart
        SET number = #{number}
        WHERE product_id = #{product_id} AND open_id = #{open_id}
    </update>

    <select id="selectCart" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            a.product_id ,
            a.number ,
            b.`name` ,
            b.price ,
            b.inventory ,
            b.image1 ,
            b.badge_introduce
        FROM
            t_user_cart a ,
            t_product b
        WHERE
            a.product_id = b.id
        AND a.open_id = #{open_id}
    </select>

    <select id="selectProductInfo" parameterType="java.lang.Long" resultType="PayProductInput">
        SELECT name as product_name,price
         FROM t_product
        WHERE id = #{product_id}
          AND is_delete = 0
    </select>

</mapper>