<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yrkj.mapper.OrderMapper">

    <insert id="insertOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_order(
            order_num,
            open_id,
            order_state,
            product_cost,
            courier_company,
            courier_cost,
            create_time
        )VALUES (
            #{order_num},
            #{open_id},
            #{order_state},
            #{product_cost},
            #{courier_company},
            #{courier_cost},
            #{create_time}
        )
    </insert>

    <insert id="insertOrderProduct" parameterType="Order">
        INSERT INTO t_order_product(
            order_id,
            product_id,
            product_name,
            number,
            price
        )VALUES
        <foreach collection="list" item="item" separator="," >
            (#{id},#{item.product_id},#{item.product_name},#{item.number},#{item.price})
        </foreach>
    </insert>

    <delete id="deleteUserCart" parameterType="Order">
        DELETE FROM t_user_cart
        WHERE open_id = #{open_id}
        AND product_id in
        <foreach separator="," index="index" item="item" collection="list" close=")" open="(">
            #{item.product_id}
        </foreach>
    </delete>

    <update id="updateOrder" parameterType="Order">
        UPDATE t_order
        SET order_num = #{order_num},
            province_id = #{province_id},
            province_name = #{province_name},
            city_id = #{city_id},
            city_name = #{city_name},
            address = #{address},
            phone = #{phone},
            courier_cost = #{courier_cost},
            receiver = #{receiver},
            order_state = #{order_state}
        WHERE id = #{id}
    </update>

    <select id="selectOrder" parameterType="java.lang.Long" resultType="Order">
        SELECT * FROM t_order WHERE id = #{id}
    </select>

    <select id="selectWxOrderList" parameterType="WXOrderSearch" resultType="java.util.Map">
        SELECT
            t.id ,
            t.order_num ,
            t.order_state ,
            t.product_cost ,
            t.courier_cost ,
            t.courier_order ,
            (
                SELECT
                    group_concat(b.image1 SEPARATOR ';')
                FROM
                    t_order_product a ,
                    t_product b
                WHERE
                    a.product_id = b.id
                AND a.order_id = t.id
                GROUP BY
                    b.image1
            ) AS images ,
            (
                SELECT
                    COALESCE(SUM(a.number) , 0)
                FROM
                    t_order_product a
                WHERE
                    a.order_id = t.id
            ) AS product_count
        FROM
            t_order t
        WHERE
            t.order_num IS NOT NULL
        AND t.open_id = #{open_id}
    </select>

    <select id="selectOrderByNum" parameterType="java.lang.String" resultType="Order">
        SELECT * FROM t_order WHERE order_num = #{order_num}
    </select>

    <select id="selectOrderProduct" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT
            a.product_id ,
            b.`name` ,
            b.price ,
            b.image1 ,
            a.price,
            b.badge_introduce ,
	        a.number
        FROM
            t_order_product a ,
            t_product b
        WHERE
            a.product_id = b.id
        AND order_id = #{order_id}
    </select>

    <!--获取该订单内所有涉及的单一商品和数量-->
    <select id="selectProductNumberByOrderId" parameterType="java.lang.Long" resultType="UserCart">
        SELECT
            tt.*
        FROM
            (
                (
                    SELECT
                        c.id as product_id,
                        b.number
                    FROM
                        t_order a ,
                        t_order_product b ,
                        t_product c
                    WHERE
                        a.id = b.order_id
                    AND b.product_id = c.id
                    AND c.type = 1
                    AND a.id = #{id}
                )
                UNION ALL
                    (
                        SELECT
                            e.product_id ,
                            d.number
                        FROM
                            t_order c ,
                            t_order_product d ,
                            t_package_product e
                        WHERE
                            e.package_id = d.product_id
                        AND c.id = d.order_id
                        AND c.id = #{id}
                    )
            ) tt
    </select>

    <insert id="insertUserProduct" parameterType="UserProduct">
        INSERT INTO t_user_product(
            open_id,
            product_id,
            create_time
        )VALUES (
            #{open_id},
            #{product_id},
            #{create_time}
        )
    </insert>

    <select id="selectUserProductExist" parameterType="UserProduct" resultType="java.lang.Integer">
        SELECT count(1) FROM t_user_product WHERE open_id = #{open_id} AND product_id = #{product_id}
    </select>

    <select id="selectCurrentGetAchievement" parameterType="java.lang.String" resultType="UserAchievement">
      SELECT t.*
        FROM
        (SELECT
            a.id as achievement_id,
            a.`name` as achievement_name,
            a.type as achievement_type,
            a.achievement_val,
            a.integration,
            COUNT(1) buy_count,
            (SELECT count(1) FROM t_achievement_relation c WHERE c.achievement_id = a.id) finish_count
        FROM
            t_achievement a ,
            t_achievement_relation b
        WHERE
            a.id = b.achievement_id
        AND a.type = 1
        AND b.relation_id IN  (SELECT e.product_id from t_user_product e WHERE e.open_id = #{open_id})
        AND b.achievement_id NOT in(SELECT f.achievement_id FROM t_user_achievement f WHERE f.open_id = #{open_id})
        GROUP BY
            b.achievement_id) t WHERE t.finish_count = t.buy_count
    </select>

    <insert id="insertUserAchievement" parameterType="UserAchievement">
        INSERT INTO t_user_achievement (
            open_id ,
            achievement_id,
            achievement_name,
            achievement_type,
            achievement_val,
            create_time
        )VALUES (
            #{open_id} ,
            #{achievement_id} ,
            #{achievement_name} ,
            #{achievement_type} ,
            #{achievement_val} ,
            #{create_time}
        )

    </insert>

    <insert id="insertUserIntegration" parameterType="UserIntegration">
        INSERT INTO t_user_integration(
            open_id,
            integration_val,
            remark,
            create_time
        )VALUES (
            #{open_id},
            #{integration_val},
            #{remark},
            #{create_time}
        )
    </insert>

</mapper>